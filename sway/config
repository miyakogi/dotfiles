# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Start Systemd User Services
#
# --- Update DBus Environment Variables and Start XDG Desktop Portal Service
# see: https://github.com/swaywm/sway/wiki#gtk-applications-take-20-seconds-to-start
exec "dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP=sway && systemctl --user restart xdg-desktop-portal.service xdg-desktop-portal-wlr.service"

# See: https://github.com/swaywm/sway/wiki/Systemd-integration
# Import env vars for sway then trigger user-graphical-session and sway-graphical-session targets
# -> autostart services on graphical session
# Note: The systemctl commands must be run synchronously and can't be split
#       into two exec statements, since otherwise the session target may be started
#       before systemctl import-environment is complete, and services that require
#       certain variables will fail to run.
exec "systemctl --user import-environment {,WAYLAND_}DISPLAY SWAYSOCK LATITUDE LONGITUDE; systemctl --user start user-graphical-session.target; systemctl --user start sway-graphical-session.target"

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Colors
set $foreground  #c3c7d1
set $background  #161925
set $transparent #00000000
set $white       #ffffff
set $black       #000000
set $red         #ed254e
set $orange      #ff6a00
set $cyan        #00c1e4
set $yellow      #f9dc5c
set $magenta     #c74ded
set $green       #00e8c6
set $blue        #7cb7ff

# semi-transparent colors
set $cyan2       #00c1e4bb
set $magenta2    #c74dedbb

# Your preferred terminal emulator
set $term launch-terminal

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu launch-menu

### Output configuration
#
# ASUS VG28UQL1A (4K: 3840x2160)
output DP-1 {
    # Default resolution and refresh rate, checked by `swaymsg -t get_outpus`
    #mode 3840x2160@144.000Hz
    # up to 4K120Hz, we don't need DSC compression which may be causing screen flickering
    mode 3840x2160@119.880Hz

    # Position (right side with half vertical offset)
    position 0 0

    # Dispaly scaling
    # currently do not support proper fractional scaling for xwayland (blurry output)
    #scale 1.5

    # Enable HDR
    # HDR cannot be enabled...
    #render_bit_depth 8

    # Enable FreeSync
    adaptive_sync on

    # Manually set subpixel hinting
    subpixel rgb

    # Default wallpaper
    background ${XDG_CONFIG_HOME:-$HOME/.config}/sway/bg_4k.png center $black

    # Composit output timing in milliseconds
    max_render_time off
}

# ASUS VG258Q (FHD: 1920x1080)
output DP-2 {
    # Default resolution and refresh rate, checked by `swaymsg -t get_outpus`
    # vram idle clock issue has been fixed on linux-5.15, now don't need to use custom resolution
    # ---
    # Below settings keep display mode settings when switching TTY, and keep low vram idle clock:
    # Kernel-144Hz-VRR: set kernel parameter `video=DP-2:1920x1080@143.882 amdgpu.freesync_video=1`
    #                  -> cannot resume from display poweroff(?)
    # mode 1920x1080@143.088Hz
    # Kernel-120Hz-VRR: set kernel parameter `video=DP-2:1920x1080@119.982 amdgpu.freesync_video=1`
    #mode 1920x1080@118.976Hz
    mode 1920x1080@119.982Hz
    # 60Hz
    #mode 1920x1080@60Hz
    # 144Hz
    #mode 1920x1080@144.001Hz

    # Position
    position 3840 540

    # Enable FreeSync
    adaptive_sync on

    # Manually set subpixel hinting
    subpixel rgb

    # Default wallpaper
    background ${XDG_CONFIG_HOME:-$HOME/.config}/sway/bg.png center $black

    # Composit output timing in milliseconds
    max_render_time off
}

### Decoration configuration
#
# Font
#

# Title bar
title_align center
font pango:Source Han Mono M 10

# Border
default_border pixel 2
default_floating_border pixel 2

# Edge border
hide_edge_borders both

#
# Border colors
#                        border    bg        text        indicat  child_border
client.focused           $magenta2 $magenta2 $background $magenta $magenta2
client.unfocused         $cyan2    $cyan2    $background $cyan    $cyan2
client.focused_inactive  $cyan2    $cyan2    $background $cyan    $cyan2

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# Keyboard
input type:keyboard {
    xkb_file ~/.Xkeymap
    xkb_layout "jp"
    xkb_options "ctrl:nocaps"
    xkb_numlock enable
    repeat_delay 300
    repeat_rate 36
}

# Mouse
input type:pointer {
    # disable mouse acceleration
    accel_profile flat
    # 800DPI -> 1600DPI
    pointer_accel 0.5
}

# set cursor theme
seat seat0 xcursor_theme default 48

### Key bindings
#
# Basics:
#

# Start a terminal which can run without xwayland
bindsym $mod+Return exec launch-foot

# Start terminal chooser
bindsym $mod+Shift+Return exec $term
bindsym $mod+Shift+space exec $term

# Kill focused window
bindsym $mod+w kill
bindsym $mod+q kill
bindsym $mod+d kill
bindsym button2 kill

# Start your launcher
bindsym $mod+z exec $menu
bindsym $mod+Shift+z exec "rofi -modi run,drun -show drun"
for_window [app_id="^sklauncher$"] floating enable, sticky enable

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
# bindsym $mod+Shift+c reload
bindsym $mod+Shift+r reload

# Exit sway (logs you out of your Wayland session)
# bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
bindsym $mod+Shift+e exec --no-startup-id leave

# Take screenshot
bindsym Print exec _grim_file="${XDG_PICTURES_DIR:-$HOME/Pictures}/screenshots/grim/grim-$(date +%Y%m%d-%H%M%S).png" && grim $_grim_file && notify-send -i camera "Screenshot saved to $(echo $_grim_file | sed \"s|$HOME|~|\")"
bindsym Shift+Print exec _grim_file="${XDG_PICTURES_DIR:-$HOME/Pictures}/screenshots/grim/grim-$(date +%Y%m%d-%H%M%S).png" && echo $(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | \"\(.x),\(.y) \(.width)x\(.height)\"') | grim -g - $_grim_file && notify-send -i camera "Screenshot saved to $(echo $_grim_file | sed \"s|$HOME|~|\")"
bindsym Control+Print exec --no-startup-id grim -g "$(slurp)" - | swappy -f -

# Scratchpad terminal (alacritty with tmux)
bindcode 68 exec --no-startup-id sway-scratchterm
assign [app_id="scratchterm"] output DP-2
for_window [app_id="scratchterm"] floating enable
for_window [app_id="scratchterm"] sticky enable
for_window [app_id="scratchterm"] move scratchpad
for_window [app_id="scratchterm"] resize set width 960
for_window [app_id="scratchterm"] resize set height 1056
for_window [app_id="scratchterm"] move right 480

# Mute mic
bindcode 121 exec --no-startup-id "pulsemixer --id $(pulsemixer --list-sources | grep 'Name: USB PnP Audio Device Mono' | sed -r 's/^.*ID: ([a-zA-Z0-9\-]+).*$/\1/') --mute"

#
# Moving around:
#

# Disable auto mouse focus
# focus_follows_mouse no

# Disable focus wrapping inside the workspace
focus_wrapping no

# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# Or use $mod+[up|down|left|right]

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# Ditto, with arrow keys

#
# Workspaces:
#

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1  "1:一"
set $ws2  "2:二"
set $ws3  "3:三"
set $ws4  "4:四"
set $ws5  "5:五"
set $ws6  "6:六"
set $ws7  "7:七"
set $ws8  "8:八"
set $ws9  "9:九"
set $ws10 "10:十"
set $ws11 "11:一"
set $ws12 "12:二"
set $ws13 "13:三"
set $ws14 "14:四"
set $ws15 "15:五"
set $ws16 "16:六"
set $ws17 "17:七"
set $ws18 "18:八"
set $ws19 "19:九"
set $ws20 "20:十"

# Set workspace output
workspace $ws1  output DP-1
workspace $ws2  output DP-1
workspace $ws3  output DP-1
workspace $ws4  output DP-1
workspace $ws5  output DP-1
workspace $ws6  output DP-1
workspace $ws7  output DP-1
workspace $ws8  output DP-1
workspace $ws9  output DP-1
workspace $ws10 output DP-1
workspace $ws11 output DP-2
workspace $ws12 output DP-2
workspace $ws13 output DP-2
workspace $ws14 output DP-2
workspace $ws15 output DP-2
workspace $ws16 output DP-2
workspace $ws17 output DP-2
workspace $ws18 output DP-2
workspace $ws19 output DP-2
workspace $ws20 output DP-2

# Switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10
bindsym Control+$mod+1 workspace $ws11
bindsym Control+$mod+2 workspace $ws12
bindsym Control+$mod+3 workspace $ws13
bindsym Control+$mod+4 workspace $ws14
bindsym Control+$mod+5 workspace $ws15
bindsym Control+$mod+6 workspace $ws16
bindsym Control+$mod+7 workspace $ws17
bindsym Control+$mod+8 workspace $ws18
bindsym Control+$mod+9 workspace $ws19
bindsym Control+$mod+0 workspace $ws20

# Switch workspace
bindsym $mod+bracketright workspace next_on_output
bindsym $mod+bracketleft workspace prev_on_output
bindsym Control+$mod+Left workspace prev_on_output
bindsym Control+$mod+Right workspace next_on_output

# Switch output
bindsym $mod+Left focus output left
bindsym $mod+Right focus output right

# Add new workspace
bindsym $mod+a exec --no-startup-id sway-addws
bindsym $mod+backslash exec --no-startup-id sway-addws
bindsym Control+$mod+Down exec --no-startup-id sway-addws
bindsym Control+$mod+Up exec --no-startup-id sway-addws

# Move focused container to workspace
bindsym Shift+$mod+1 move container to workspace $ws1
bindsym Shift+$mod+2 move container to workspace $ws2
bindsym Shift+$mod+3 move container to workspace $ws3
bindsym Shift+$mod+4 move container to workspace $ws4
bindsym Shift+$mod+5 move container to workspace $ws5
bindsym Shift+$mod+6 move container to workspace $ws6
bindsym Shift+$mod+7 move container to workspace $ws7
bindsym Shift+$mod+8 move container to workspace $ws8
bindsym Shift+$mod+9 move container to workspace $ws9
bindsym Shift+$mod+0 move container to workspace $ws10
bindsym Control+Shift+$mod+1 move container to workspace $ws11
bindsym Control+Shift+$mod+2 move container to workspace $ws12
bindsym Control+Shift+$mod+3 move container to workspace $ws13
bindsym Control+Shift+$mod+4 move container to workspace $ws14
bindsym Control+Shift+$mod+5 move container to workspace $ws15
bindsym Control+Shift+$mod+6 move container to workspace $ws16
bindsym Control+Shift+$mod+7 move container to workspace $ws17
bindsym Control+Shift+$mod+8 move container to workspace $ws18
bindsym Control+Shift+$mod+9 move container to workspace $ws19
bindsym Control+Shift+$mod+0 move container to workspace $ws20

#
# Layout stuff:
#

# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
#bindsym $mod+s layout stacking
bindsym $mod+t layout toggle splith tabbed

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+f floating toggle

# Change focus between tiling/floating window
bindsym $mod+space focus mode_toggle

# Move focus to the parent/child container
bindsym $mod+Up focus parent
bindsym $mod+Down focus child

#
# Scratchpad:
#

# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
# bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
# bindsym $mod+minus scratchpad show

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Default window mode configuration
#

# Applications
assign [app_id="^firefox$"] workspace $ws1
assign [app_id="^Firefox Beta$"] workspace $ws1
assign [app_id="discord"] workspace $ws11
assign [instance="discord"] workspace $ws11
assign [title="^Discord$"] workspace $ws11
assign [app_id="^google-chrome$"] workspace $ws12
assign [class="^Google-chrome$"] workspace $ws12
assign [app_id="^brave-browser$"] workspace $ws13
assign [class="^Brave-browser$"] workspace $ws13
assign [app_id="tweetdeck"] workspace $ws14
assign [instance="tweetdeck"] workspace $ws14
assign [title="^TweetDeck$"] workspace $ws14
#assign [instance="^spotify$"] workspace $ws15  # Does not work!
#assign [class="^Spotify$"] workspace $ws15  # Does not work!
#assign [title="^Spotify$"] workspace $ws15  # Does not work!
for_window [instance="^spotify$"] move window to workspace $ws15
for_window [class="^Spotify$"] move window to workspace $ws15
for_window [title="^Spotify$"] move window to workspace $ws15

# Xeys
for_window [class="XEyes"] floating enable

# pulseaudio volume control
for_window [app_id="pavucontrol"] floating enable

# virtual machine client/viewer
assign [app_id="looking-glass-client"] workspace $ws10
for_window [app_id="looking-glass-client"] floating enable
for_window [app_id="looking-glass-client"] inhibit_idle visible
assign [app_id="virt-viewer"] workspace $ws10

#
# Steam:
#
assign [class="^Steam$"] workspace $ws7
assign [title="^ProtonUp-Qt"] workspace $ws7

# Games

# Gamescope
for_window [class="^gamescope$"] floating enable, inhibit_idle focus, move window to workspace $ws8

# Proton games
assign [class="^steam_app_*"] workspace $ws8
for_window [class="^steam_app_*"] inhibit_idle focus, max_render_time 1

# Directly launched by proton
for_window [class="^steam_proton$"] floating enable
for_window [class="^steam_proton$"] inhibit_idle focus, max_render_time 1

# Tomb Raider
for_window [class="^steam_app_203160$"] fullscreen enable  # Tomb Raider 1
assign [class="RiseOfTheTombRaider"] workspace $ws8
assign [class="ShadowOfTheTombRaider"] workspace $ws8

# Native games
for_window [class="^(h|H)elltaker*"] floating enable, move position center
assign [class="^(h|H)elltaker*"] workspace $ws8

#
# Audio/Music:
#
assign [class="^spotify-web$"] workspace $ws9
assign [app_id="^kitty-music$"] workspace $ws9

#
# Status Bar:
#
bar {
    id main
    output DP-1

    font pango:Symbols Nerd Font, Sarasa Term J 24
    height 48
    position top
    status_command i3status-rs $HOME/.config/i3status-rust/main.toml
    pango_markup enabled
    strip_workspace_numbers yes

    tray {
        tray_padding 0
        icon_theme Adwaita
    }

    colors {
        separator $magenta
        background $black
        statusline $foreground
        focused_workspace $magenta $magenta $black
        active_workspace $magenta $black $foreground
        inactive_workspace $magenta $black $magenta
        urgent_workspace $red $red $black
        binding_mode $red $red $black
    }
}

bar {
    id sub
    output DP-2

    font pango:Symbols Nerd Font, Sarasa Term J Semibold 13.5
    position top
    status_command i3status-rs $HOME/.config/i3status-rust/sub.toml
    pango_markup enabled
    strip_workspace_numbers yes

    tray {
        icon_theme Adwaita
    }

    colors {
        separator $magenta
        background $black
        statusline $foreground
        focused_workspace $magenta $magenta $black
        active_workspace $magenta $black $foreground
        inactive_workspace $magenta $black $magenta
        urgent_workspace $red $red $black
        binding_mode $red $red $black
    }
}

# import other files from system
include /etc/sway/config.d/*

# vim: shiftwidth=4 tabstop=4 softtabstop=4
