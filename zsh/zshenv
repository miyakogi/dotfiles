#!/usr/bin/env zsh
# ============================================
#  Zsh Environment Variables
# ============================================

# Set default environment variables
export XDG_CONFIG_HOME=$HOME/.config
export XDG_PICTURES_DIR=$HOME/Pictures
export LESS="-iFRS"
export SYSTEMD_LESS="iFRSM"

# OS setting
if [[ "$(uname)" == "Darwin" ]]; then
  export OSNAME=Mac
elif [[ $OSTYPE == msys ]]; then
  export OSNAME=Windows
elif [[ "$(expr substr $(uname -s) 1 4)" == "MSYS" ]]; then
  export OSNAME=Windows
elif [[ "$(expr substr $(uname -s) 1 6)" == "CYGWIN" ]]; then
  export OSNAME=Windows
elif [[ "$(expr substr $(uname -s) 1 5)" == "Linux" ]]; then
  if [[ -e /etc/arch-release ]]; then
    export OSNAME=Arch
  elif [[ -e /etc/lsb-release ]]; then
    export OSNAME=Ubuntu
  else
    export OSNAME=Linux
  fi
else
  export OSNAME=Unknown
fi

# kitty is not supported in vagrant-ubuntu
if [[ "$OSNAME" == "Ubuntu" && "$USERNAME" == "vagrant" && "$TERM" == "xterm-kitty" ]]; then
  export TERM=xterm-256color
fi

# Set locale
if [[ $TERM == cygwin ]]; then
  export LANG=en_US.utf-8
fi

# Project setting
export PROJECT_HOME=$HOME/Projects

# Setting $PATH
add_path() {
  case ":$PATH:" in
    *:"$1":*)
      ;;
    *)
      path=("$1" $path)
  esac
}

# set basic bin path
if [[ $OSNAME == Windows ]]; then
  export MSYS2_PATH_TYPE=inherit
  add_path /mingw64/bin
fi

if [[ $OSNAME == Mac ]]; then
  add_path /usr/local/sbin
  add_path /usr/local/bin
fi

# pyenv
if type pyenv &>/dev/null; then
  add_path "$(pyenv root)/shims"
fi

# pip --user
if [[ $OSNAME == Mac ]]; then
  add_path $HOME/Library/Python/3.7/bin
else
  add_path $HOME/.local/bin
fi

# rust
add_path $HOME/.cargo/bin
if type rustc &>/dev/null; then
  export RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"
fi
if type sccache &>/dev/null; then
  export RUSTC_WRAPPER=$(which sccache)
fi

# go
export GOPATH=$HOME/.go
add_path $GOPATH/bin

# npm
add_path $HOME/.node_modules/bin
export npm_config_prefix=~/.node_modules

# user local scripts
add_path $HOME/bin

# set default programs
if type nvim &>/dev/null; then
  export EDITOR=nvim
  export MANPAGER="nvim +Man! -u ${XDG_CONFIG_HOME:-$HOME/.config}/nvim/manrc"
fi

# load machine local profile
[[ -f $ZDOTDIR/.zshenv.local ]] && source $ZDOTDIR/.zshenv.local

# vim: sw=2 et
