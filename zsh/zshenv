#!/usr/bin/env zsh
# ============================================
#  Zsh Environment Variables
# ============================================

# profiling
# zmodload zsh/zprof && zprof

# zsh default directory
export ZDOTDIR=$HOME/.zsh
export EDITOR=vim
export TERM="xterm-256color"

# OS setting
if [[ "$(uname)" == "Darwin" ]]; then
  export OSNAME=Mac
elif [[ $OSTYPE == msys ]]; then
  export OSNAME=Windows
elif [[ "$(expr substr $(uname -s) 1 4)" == "MSYS" ]]; then
  export OSNAME=Windows
elif [[ "$(expr substr $(uname -s) 1 5)" == "Linux" ]]; then
  if [ -e /etc/lsb-release ]; then
    export OSNAME=Ubuntu
  elif [ -e /etc/arch-release ]; then
    export OSNAME=Arch
  else
    export OSNAME=Linux
  fi
else
  export OSNAME=Unknown
fi

# Project setting
export PROJECT_HOME=$HOME/Projects
if [[ $OSNAME == Ubuntu ]]; then
  export WORKON_HOME=$HOME/.virtualenvs/ubuntu
elif [[ $OSNAME == Arch ]]; then
  export WORKON_HOME=$HOME/.virtualenvs/arch
else
  export WORKON_HOME=$HOME/.virtualenvs
fi

# Setting $PATH
if [[ $OSNAME == Windows ]]; then
  export MSYS2_PATH_TYPE=inherit
  export PATH=/mingw64/bin:$PATH
fi

if [[ $OSNAME == Ubuntu ]]; then
  # ubuntu specific binaries
  export PATH=$HOME/bin/ubuntu:$PATH

  # ubuntu local builds
  export PATH=$HOME/usr/bin:$PATH

  # go
  export GOROOT=/usr/local/go
  export PATH=$PATH:$GOROOT/bin

  # nim
  export PATH=$HOME/.nimble/bin:$PATH

  # rust
  export PATH=$HOME/.cargo/bin:$PATH
  if type rustc > /dev/null 2>&1; then
    export RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"
  fi

  # node
  export PATH=$HOME/opt/node/bin:$PATH
fi

# pip --user
export PATH=$HOME/.local/bin:$PATH

# go
export GOPATH=$HOME/.go
export PATH=$PATH:$GOPATH/bin

# npm
export PATH=$HOME/.node_modules/bin:$PATH
export npm_config_prefix=~/.node_modules

# ruby gem
export PATH=$HOME/.gem/ruby/2.5.0/bin:$PATH

# load machine local profile
[[ -f .zshenv.local ]] && source .zshenv.local

# vim: sw=2 et
