#!/usr/bin/env zsh
# ===============================================
# zsh loads this file only if it is a login-shell
# ===============================================

# load machine local profile
[[ -f $ZDOTDIR/.zprofile.local ]] && source $ZDOTDIR/.zprofile.local

# start graphical session
# -> after updating BIOS(?) it takes long time (~2min) to reach graphical.target
#    so ignore graphical-target (remove `systemctl -q is-active graphical.target` check)
if [[ -z "$DISPLAY" && "$XDG_VTNR" -eq 1 && ( -z "$XDG_SESSION_TYPE" || "$XDG_SESSION_TYPE" == tty ) && "$OSNAME" == "Arch" ]]; then
  echo -n "Select WM/DE [bspwm, gnome(-x11), i3, kde(-x11), lxqt, sway] [default: sway]:\n>>> "
  read wm

  # set default wm as sway
  if [[ -z $wm ]]; then
    wm="sway"
  fi

  # exec shell or exit
  case $wm in
    shell)
      exec $SHELL;;
    sh)
      exec sh;;
    bash)
      exec bash;;
    zsh)
      exec zsh;;
    fish)
      exec fish;;
    exit)
      exit 0;;
  esac

  if [[ $wm == (sway|gnome|kde|weston) ]]; then  # for wayland
    # set xdg env var
    export XDG_SESSION_TYPE=wayland

    # set qt
    export QT_QPA_PLATFORM=wayland-egl
    export QT_QPA_PLATFORMTHEME=qt5ct

    # set IM
    export XMODIFIERS=@im=fcitx
    export GTK_IM_MODULE=fcitx
    export QT_IM_MODULE=fcitx
    export GLFW_IM_MODULE=fcitx

    # set firefox
    export MOZ_ENABLE_WAYLAND=1

    case $wm in
      sway)
        # set env vars for sway
        export XDG_CURRENT_DESKTOP=sway
        systemctl --user set-environment XDG_CURRENT_DESKTOP=sway

        # use vulkan renderer
        export WLR_REDERER=vulkan

        # start sway
        exec sway ;;
      gnome)
        # start gnome wayland session
        exec dbus-run-session gnome-session ;;
      kde)
        # start kde plasma wayland session
        exec dbus-run-session startplasma-wayland ;;
      weston)
        exec weston-launch ;;
    esac
    exit 0

  else
    # start X session
    exec startx ~/.xinitrc $wm -- -maxclients 2048
  fi
fi

# vim: sw=2 et
