snippet     import
alias       imp
abbr        import ...
options     head
	import ${0:#:module}

snippet     from
abbr        from ... import ...
options     head
	from ${1:#:package} import ${0:#:module}

snippet     proc
abbr        proc procedure(...): ... =
	proc ${1:#:name}(${2}): ${3:#:type} =
    ${0:TARGET}

snippet     method
abbr        method method_name(...): ... =
	method ${1:#:name}(${2}): ${3:#:type} =
    ${0:TARGET}

snippet     iterator
abbr        iterator iterator_name(...): ... =
	iterator ${1:#:name}(${2}): ${3:#:type} =
    ${0:TARGET}

snippet     do
abbr        do (...) -> ... : ...
	do (${1:#:args}) -> ${2:#:type of return value} : ${0:TARGET}

snippet     if
abbr        if ...: ...
options     head
	if ${1:#:condition}:
		${0:TARGET}

snippet     elif
abbr        elif ...: ...
options     head
	elif ${1:#:condition}:
		${0}

snippet     else
abbr        else: ...
options     head
	else:
		${0}

snippet     when
abbr        when ...: ...
options     head
	when ${1:#:condition}:
		${0:TARGET}

snippet     try-except
abbr        try: ... except ...: ...
alias       trye
options     head
	try:
		${1}
	except ${2:#:Exception}:
		${3}

snippet     try-finally
abbr        try: ... finally: ...
alias       tryf
options     head
	try:
		${1}
	finally:
		${2}

snippet     try-except-finally
abbr        try: ... except ...: ... finally: ...
alias       tryef
options     head
	try:
		${1}
	except ${2:#:exception}:
		${3}
	finally:
		${4}

snippet     while
abbr        while ...: ...
options     head
	while ${1:#:condition}:
		${0:TARGET}

snippet     for
abbr        for ... in ...: ...
options     head
	for ${1:#:value} in ${2:#:list}:
		${0:TARGET}

snippet     echo
options     word
	echo(${0:TARGET})

snippet     var
alias       v
abbr        var ... = ...
options     head
	var ${1} = ${2}

snippet     vars
alias       vs
abbr        var<CR> ... = ...
options     head
	var
		${1} = ${2}

snippet     var:
alias       v:
abbr        var ... : ...
options     head
	var ${1}: ${2}

snippet     vars:
alias       vs:
abbr        var<CR> ... : ...
options     head
	var
		${1}: ${2}

snippet     let
alias       l
abbr        let ... = ...
options     head
	let ${1} = ${2}

snippet     lets
alias       ls
abbr        let<CR> ... = ...
options     head
	let
		${1} = ${2}

snippet     const
alias       c
abbr        const ... = ...
options     head
	const ${1} = ${2}

snippet     consts
alias       cs
abbr        const ... = ...
options     head
	const
		${1} = ${2}

snippet     type
abbr        type ...
options     head
	type ${1} = ref object of ${2:RootObj}
		${0:TARGET}
